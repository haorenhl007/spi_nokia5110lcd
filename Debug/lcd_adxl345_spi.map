Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                              ./ascii.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
LOAD ./ascii.o
LOAD ./chinese.o
LOAD ./led1602.o
LOAD ./main.o
LOAD ./nokia5110.o
LOAD ./spi.o
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x584
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000048        0x4 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000004c        0x2 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x0000004c                __vector_1
                0x0000004c                __vector_12
                0x0000004c                __bad_interrupt
                0x0000004c                __vector_6
                0x0000004c                __vector_3
                0x0000004c                __vector_11
                0x0000004c                __vector_13
                0x0000004c                __vector_17
                0x0000004c                __vector_7
                0x0000004c                __vector_5
                0x0000004c                __vector_4
                0x0000004c                __vector_9
                0x0000004c                __vector_2
                0x0000004c                __vector_15
                0x0000004c                __vector_8
                0x0000004c                __vector_14
                0x0000004c                __vector_10
                0x0000004c                __vector_16
                0x0000004c                __vector_18
 .text          0x0000004e        0x0 ./ascii.o
 .text          0x0000004e        0x0 ./chinese.o
 .text          0x0000004e      0x450 ./led1602.o
                0x0000004e                en_toggle
                0x00000064                wait_until_ready
                0x0000008a                set_command
                0x00000108                init_lcd
                0x000001ae                set_data
                0x00000218                get_data
                0x00000294                get_pos
                0x000002f2                get_pos2
                0x00000350                write_str
                0x00000366                set_pos
                0x0000036c                return_home
                0x00000372                set_cgram_addr
                0x0000037a                set_cgram_data
                0x0000037e                init_chardb
 .text          0x0000049e        0x0 ./main.o
 .text          0x0000049e       0xc0 ./nokia5110.o
                0x0000049e                nokia5110_send1byte
                0x000004ac                nokia5110_write_char
                0x000004e4                nokia5110_write_string
                0x000004fa                nokia5110_set_pos
                0x00000510                nokia5110_clear
                0x00000534                nokia5110_init
 .text          0x0000055e       0x12 ./spi.o
                0x0000055e                SPI_MasterInit
                0x00000568                SPI_MasterTransmit
 .text          0x00000570        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text          0x00000570        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                0x00000570                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000570       0x10 ./main.o
                0x00000570                main
 .text.libgcc.mul
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                0x00000580                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000580        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                0x00000580                exit
                0x00000580                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000580        0x4 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000584                _etext = .

.data           0x00800060      0x24a load address 0x00000584
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060      0x228 ./ascii.o
                0x00800060                font6x8
 .data          0x00800288        0x0 ./chinese.o
 .data          0x00800288        0x0 ./led1602.o
 .data          0x00800288        0x0 ./main.o
 .data          0x00800288        0x0 ./nokia5110.o
 .data          0x00800288        0x0 ./spi.o
 .data          0x00800288        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .data          0x00800288        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800288       0x22 ./main.o
 *(.gnu.linkonce.d*)
                0x008002aa                . = ALIGN (0x2)
                0x008002aa                _edata = .
                0x008002aa                PROVIDE (__data_end, .)

.bss            0x008002aa        0x0
                0x008002aa                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008002aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008002aa        0x0 ./ascii.o
 .bss           0x008002aa        0x0 ./chinese.o
 .bss           0x008002aa        0x0 ./led1602.o
 .bss           0x008002aa        0x0 ./main.o
 .bss           0x008002aa        0x0 ./nokia5110.o
 .bss           0x008002aa        0x0 ./spi.o
 .bss           0x008002aa        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .bss           0x008002aa        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x008002aa                PROVIDE (__bss_end, .)
                0x00000584                __data_load_start = LOADADDR (.data)
                0x000007ce                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002aa        0x0
                0x008002aa                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002aa                PROVIDE (__noinit_end, .)
                0x008002aa                _end = .
                0x008002aa                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2220
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc       0xe4 ./ascii.o
                                 0xf0 (size before relaxing)
 .stab          0x000007b0       0xd8 ./chinese.o
                                 0xe4 (size before relaxing)
 .stab          0x00000888     0x1188 ./led1602.o
                               0x1194 (size before relaxing)
 .stab          0x00001a10      0x180 ./main.o
                                0x39c (size before relaxing)
 .stab          0x00001b90      0x390 ./nokia5110.o
                                0x5ac (size before relaxing)
 .stab          0x00001f20      0x1bc ./spi.o
                                0x3d8 (size before relaxing)
 .stab          0x000020dc       0x6c /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                                 0x78 (size before relaxing)
 .stab          0x00002148       0xd8 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0xc01
 *(.stabstr)
 .stabstr       0x00000000      0xc01 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x21
 *(.comment)
 .comment       0x00000000       0x21 ./ascii.o
                                 0x22 (size before relaxing)
 .comment       0x00000000       0x22 ./chinese.o
 .comment       0x00000000       0x22 ./led1602.o
 .comment       0x00000000       0x22 ./main.o
 .comment       0x00000000       0x22 ./nokia5110.o
 .comment       0x00000000       0x22 ./spi.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lcd_adxl345_spi.elf elf32-avr)
LOAD linker stubs
